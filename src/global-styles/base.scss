@use './fonts.scss';
@use './modal.scss';
@use './field.scss';
@use './close.scss';
@use './mixin.scss';
@use './variables.scss' as v;

html {
  box-sizing: border-box;
  scroll-behavior: smooth;
  position: relative;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  font-family: 'Montserrat', 'Arial', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 125%;
  color: v.$text-minor-05;
  background-color: v.$gray-light;
  width: 100%;
  height: 100vh;
  margin: 0;

  -ms-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

.visually-hidden:not(:focus):not(:active) {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

img {
  max-width: 100%;
}

a {
  text-decoration: none;
  color: v.$text-minor-05;
  transition: v.$transition;
  cursor: default;

  @media screen and (min-width: v.$width-768) {
    cursor: pointer;

    &:hover,
    &:focus {
      transition: v.$transition;
    }
  }
}

button {
  font-family: 'Montserrat', 'Arial', sans-serif;
  border: none;
  background-color: transparent;
  padding: 0;
  transition: v.$transition;
  cursor: default;

  @media screen and (min-width: v.$width-768) {
    cursor: pointer;

    &:hover,
    &:focus {
      transition: v.$transition;
    }
  }
}

svg {
  fill: v.$text-minor-05;
  transition: v.$transition;

  &:hover,
  &:focus {
    transition: v.$transition;
  }
}

input {
  font-family: 'Montserrat', 'Arial', sans-serif;
  transition: v.$transition;
  padding: 0;
  outline: none;
  border-color: transparent;
  background-color: transparent;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
}

input[type='number'] {
  -moz-appearance: textfield;
}

p,
h1,
h2,
h3,
h4 {
  margin: 0;
}
